[project]
name = "alpaqa"
readme = "python/README.rst"
requires-python = ">=3.8"
license = { "file" = "LICENSE" }
authors = [{ "name" = "Pieter P", "email" = "pieter.p.dev@outlook.com" }]
keywords = ["optimization", "panoc", "alm", "mpc"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Typing :: Typed",
]
dependencies = ["numpy<3", "casadi~=3.6.7", "cmake>=3.28,<4", "ninja~=1.11.1"]
dynamic = ["version", "description"]

[project.optional-dependencies]
docs = [
    "breathe~=4.35.0",
    "sphinx>=7.2.2,<8",
    "sphinx-tabs~=3.4.4",
    "sphinxcontrib-matlabdomain~=0.20.2",
    "sphinxcontrib-moderncmakedomain~=3.27.0",
    "furo==2023.08.19",
    "matplotlib",
]
debug = ["alpaqa-debug==1.0.0a20.dev0"]
test = ["pytest>=7.2.0,<7.5", "qpalm~=1.2.1", "scipy>=1.9.3,<2"]

[project.urls]
"Documentation" = "https://kul-optec.github.io/alpaqa"
"Source" = "https://github.com/kul-optec/alpaqa"
"Bug Tracker" = "https://github.com/kul-optec/alpaqa/issues"

[project.scripts]
alpaqa = "alpaqa.__main__:main"

[build-system]
requires = [
    "py-build-cmake~=0.2.0a15.dev0",
    "pybind11==2.13.6",
    "pybind11-stubgen~=2.5",
    "numpy<3",
]
build-backend = "py_build_cmake.build"

[tool.py-build-cmake.module]
name = "alpaqa"
directory = "python"

[tool.py-build-cmake.sdist]
include = [
    "README.md",
    "CMakeLists.txt",
    "src",
    "cmake",
    "interfaces",
    "applications",
    "test",
]
exclude = []

[tool.py-build-cmake.cmake]
minimum_version = "3.24"
source_path = "."
args = ["-Wdev"]
preset = "conan-python"
build_presets = "conan-python-release"
config = "Release"
build_path = "build/python"
install_components = ["python_modules", "python_stubs"]
[tool.py-build-cmake.cmake.options]
ALPAQA_WITH_PYTHON = true
ALPAQA_WITH_TESTS = false
ALPAQA_WITH_EXAMPLES = false
ALPAQA_WITH_DRIVERS = false
ALPAQA_WITH_GRADIENT_CHECKER = false
ALPAQA_WITH_LBFGSB = false
ALPAQA_WITH_SINGLE_PRECISION = false
ALPAQA_WITH_LONG_DOUBLE = true
ALPAQA_WITH_QUAD_PRECISION = false
ALPAQA_WITH_UBSAN_DEBUG = false
ALPAQA_WITH_ASAN_DEBUG = false
ALPAQA_DEBUG_CHECKS_EIGEN = true
USE_GLOBAL_PYBIND11 = true           # Use the package provided by Conan, not by Pip
[tool.py-build-cmake.linux.cmake]
generator = "Ninja Multi-Config"
[tool.py-build-cmake.mac.cmake]
generator = "Ninja Multi-Config"

[tool.py-build-cmake.stubgen]
args = ["-v"]

[tool.py-build-cmake.editable]
mode = "symlink"

[tool.cibuildwheel]
build-verbosity = 1
environment = { PY_BUILD_CMAKE_VERBOSE = "1" }
test-command = "pytest {package}/python/test"
test-extras = ["test"]

[tool.cibuildwheel.macos]
archs = ["universal2"]

[tool.cibuildwheel.windows]
archs = ["AMD64", "x86", "ARM64"]

[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["python/test"]

[tool.mypy]
plugins = ["numpy.typing.mypy_plugin"]
